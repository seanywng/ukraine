```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE, 
                      fig.show = "hold")

library(tidyverse)
library(tidytext)
library(tidymodels)
library(broom)
library(ggraph)
library(tidylo)
library(widyr)
library(janitor)
library(lubridate)
library(SnowballC)
library(magrittr)
library(patchwork)
# library(DT)
library(readxl)
library(flextable)
library(viridis)
library(scales)

`%out%` <- Negate(`%in%`)

range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}

theme_set(theme_light())

options(scipen = 100)

```

```{r}

ukr_links <- read_csv("./data/reliefweb_ukr_links.csv") %>% 
  rename(url = value) %>% 
  mutate(id = row_number())

# This is the list of Spanish and French links 
to_remove <- read_csv("./data/links_to_remove.csv") %>% 
  rename(url = value) %>% 
  pull(url)

rw <- read_csv("./data/scraped_full_20230101_20220101.csv") %>% 
  mutate(date = dmy(date), 
         month = month(date)) %>% 
  left_join(ukr_links, by = c("link" = "url")) %>%
  filter(link %out% to_remove) 



```

```{r}

hum <- read_csv("./data/scraped_full_20230101_20220101.csv") %>% 
  mutate(date = dmy(date), 
         month = month(date)) %>% 
  left_join(ukr_links, by = c("link" = "url")) %>%
  filter(link %out% to_remove) %>% 
  filter(type %out% c("News and Press Release"))


hum_sector <- read_csv("./data/scraped_full_20230101_20220101.csv") %>% 
  mutate(date = dmy(date), 
         month = month(date)) %>% 
  left_join(ukr_links, by = c("link" = "url")) %>%
  filter(link %out% to_remove) %>% 
  filter(type %out% c("News and Press Release", 
                      "Map", 
                      "Appeal")) %>% 
  separate_rows(theme, sep = "\n") %>%
  mutate(sector = tolower(theme)) %>% 
  select(-theme) %>% 
  mutate(org_type = 
           case_when(
             source %in% 
               c("OCHA", "UNHCR", "UNICEF", "IOM",
                 "WHO", "WFP", "OHCHR", "IAEA",
                 "UNFPA", "UN SG", "FAO", "UN SC", 
                 "UN HRC", "UNCT Ukraine", "UN News", 
                 "UN RC/HC Ukraine", "World Bank", "UNDP", 
                 "UN GA", "UN DGC", "UN Women", "UN DPPA", 
                 "Security Council Report", "UNOPS", "UNAIDS", 
                 "UNESCO", "ILO", "UNCRC", "UNODA") ~ "UN", 
             str_detect(source, "Govt.") | 
               source %in% c("USAID", "EC", "ECHO", 
                              "EIB", "OSCE")~ "Govts", 
             str_detect(source, "Cluster") | 
               source %in% c("ETC") ~ "Clusters", 
             TRUE ~ "NGOs"))

ukr <- rw %>% 
  filter(type %out% c("News and Press Release", 
                      "Map", 
                      "Appeal"))
```

You were precisely right. I don't want to get lost in the noise and rhetoric. 

Think it through, would I read press releases? I wouldn't even wipe my ass with them normally, so why am I paying attention to them here? 


### Sources

```{r}
hum_sector %>%  
  group_by(source, org_type) %>% 
  summarise(docs = n_distinct(id), 
            sectors = n_distinct(sector), 
            .groups = "drop") %>% 
  ggplot(aes(x = docs, 
             y = sectors, 
             colour = org_type)) + 
  geom_jitter(alpha = .7,
              aes(size = docs, 
                  colour = org_type)) +  
  geom_text(aes(label = source), 
            # repel = TRUE, 
            check_overlap = TRUE, size = 2,
            # point.padding = unit(0.05, "lines"), 
            colour = "black") + 
  scale_size_continuous(range = c(1, 20)) + 
  scale_colour_brewer(palette = "Dark2") + 
  scale_x_log10(breaks = c(1, 3, 10, 30, 100, 300)) +
  scale_y_continuous(breaks = seq(0, 20, by = 4)) +
  labs(colour = "org type", size = "n docs", 
       x = "Number of RW documents", 
       y = "Sectors/themes", 
       title = "Number of documents and themes on Ukraine per RW source", 
       subtitle = "Excludes news and press releases\nData source: https://reliefweb.int/updates?advanced-search=%28PC241%29_%28DA20220101-20230104%29") +
  guides(colour = guide_legend(override.aes = list(alpha = 1,
                                                    size = 2)), 
         size = "none") + 
  theme(legend.position = "bottom")

ggsave(filename = paste0("./plots/sources_scatter.png"),
       device = "png",
       dpi = 400, height = 10, width = 14, units = "in")

```


### Titles 


```{r}
set.seed(2023)

hum %>% 
  filter(source %out% c("ACLED", "OSCE", "IAEA")) %>% 
  select(id, title) %>% 
  unnest_tokens(word, title) %>% 
  count(id, word, sort = TRUE) %>% 
  anti_join(stop_words, by = "word") %>%
  filter(nchar(word) < 20) %>%
  filter(word %out% c(tolower(month.name), "reporting", "period")) %>% 
  pairwise_count(word, id, sort = TRUE, upper = FALSE) %>%
  filter(str_detect(item1, "[a-z]") & str_detect(item2, "[a-z]")) %>%
  filter(n >= 20) %>%
  igraph::graph_from_data_frame() %>% 
  ggraph(layout = "fr") +
  geom_edge_link(aes(edge_alpha = n, edge_width = n), edge_colour = "cyan4") +
  geom_node_point(size = 2) +
  geom_node_text(aes(label = name), repel = TRUE, size = 4, 
                 point.padding = unit(0.2, "lines")) + 
  labs(title = "Word pairs in Reliefweb Ukraine article titles",
       subtitle = "2022-01-01 to 2023-01-01")

ggsave("./plots/ukr_title_network_graph.png", width = 42, height = 29.7, 
       units = "cm", dpi = 400)

```



The threshold for a word appearing the graph above is occurring in at least 20 titles. From this, I surmise that the main focuses of the response are `cash` (yes, I know, not a sector), `protection`, `education`, `health` and `internal` `displacement`. Much of the rest is boilerplate. 

Even when I lower the threshold to 10 titles, WASH, Nutrition and Shelter still do not show up. My first line of thought here is that these things aren't exactly issues in Ukraine -- I don't recall undernutrition being an issue. But then my second thought is that perhaps WASH and Shelter issues that Ukraine is dealing are not exactly problems the humanitarian industry has good solutions for. It is beyond most of us to refit an urban water system, as is the construction of new housing. 


 

```{r}

words <- hum %>% 
  select(id, source, body) %>% 
  filter(source %out% c("ACLED", "OSCE", "IAEA")) %>%
  unnest_tokens(word, body) %>% 
  count(id, word, sort = TRUE) %>% 
  anti_join(stop_words, by = "word") %>%
  filter(nchar(word) < 20) %>%
  filter(word %out% c(tolower(month.name), "reporting", "period")) %>% 
  filter(!str_detect(word, "\\.(com|org|edu|gov)")) %>% 
  filter(str_detect(word, "[a-z]"))
  
```

```{r}

set.seed(2023)

word_pair_network_graph <- words %>%
  pairwise_count(word, id, sort = TRUE, upper = FALSE) %>% 
  # filter(word %out% words_to_remove) %>% 
  filter(str_detect(item1, "[a-z]") & str_detect(item2, "[a-z]")) %>% 
  filter(n > 130) %>% 
  igraph::graph_from_data_frame() %>% 
  ggraph(layout = "kk") +
  geom_edge_link(aes(edge_alpha = n/2, edge_width = n), edge_colour = "tomato") +
  geom_node_point(size = 2) +
  geom_node_text(aes(label = name), repel = TRUE, size = 3, 
                 point.padding = unit(0.2, "lines")) +
  theme_void() + 
  labs(title = "Most common word pairs in Reliefweb article text on Ukraine", 
       subtitle = "2022-01-01 to 2023-01-01; lines show number of co-occurences", 
       edge_width = "") + 
  # Removing the legends for edge width and edge alpha 
  guides(edge_alpha = "none", 
         edge_width = "none") + 
  theme(plot.background = element_rect(fill = "white"))

ggsave(word_pair_network_graph, 
       filename = "./plots/word_pair_network_graph_v2.png",
       dpi = 400, width = 16.5, height = 11.7, units = "in") 


```

## Ukraine


### 2022 in review

Interpretability of reliefweb text analytics 

Lars Peter Nissen of ACAPS mentioned that the unfiltered dataset has too much noise, though I still think it has value over something that is strictly focused only on the actions of humanitarian actors without all the context that news and press releases provide. 

Let's first take a look at the first at News and Press Releases. The value of this type of summary is not clear -- whilst there might be certain critical elements expressed in the collective rhetoric of the industry. However, 


```{r}
rw %>% 
  count(type, sort = TRUE)
```

```{r}
rw %>% 
  filter(type %in% c("News and Press Release")) %>% 
  select(id, month, body) %>% 
  unnest_tokens(bigram, body, token = "ngrams", n = 2) %>% 
  filter(!is.na(bigram)) %>% 
  separate(bigram, c("word1", "word2"), sep = " ") %>% 
  filter(!word1 %in% stop_words$word & (nchar(word1) < 20)) %>% 
  filter(!word2 %in% stop_words$word & (nchar(word2) < 20)) %>% 
  filter(str_detect(word1, "[a-z]") & !str_detect(word1, "<")) %>% 
  filter(str_detect(word2, "[a-z]") & !str_detect(word2, "<")) %>% 
  unite(bigram, word1, word2, sep = " ") %>% 
  count(month, bigram) %>% 
  bind_tf_idf(bigram, month, n) %>% 
  bind_log_odds(bigram, month, n) %>% 
  arrange(desc(tf_idf)) %>% 
  filter(bigram %out% c("million people", "humanitarian assistance")) %>% 
  rename(word = bigram) %>% 
  filter(n > 1) %>% 
  ungroup() %>%
  filter(!is.infinite(log_odds_weighted)) %>%
  mutate(month = factor(month.abb[month],levels = month.abb)) %>%
  group_by(month) %>% 
  arrange(desc(tf_idf)) %>% 
  mutate(rank = row_number()) %>% 
  filter(rank <= 16) %>% 
  ungroup() %>% 
  ggplot(aes(x = tf_idf, 
             y = fct_reorder(word, tf_idf), 
             fill = month)) + 
  geom_col(show.legend = FALSE) +
  scale_fill_viridis_d() + 
  facet_wrap(~ month, scales = "free") + 
  labs(x = "Log-odds", 
       y = "", 
       title = "Reliefweb Ukraine articles: log-odds of word specificity by month", 
       subtitle = "A year of humanitarian rhetoric") +
   theme(legend.position = "none",
        axis.text.x = element_text(size = 5, hjust = 1, vjust = 1), 
        axis.text.y = element_text(size = 8), 
        strip.text = element_text(size = 9, face = "bold"),
        strip.background = element_rect(fill = "#212121")) 
```



```{r}

rw %>% 
  filter(type %in% c("News and Press Release")) %>% 
  select(id, month, body) %>% 
  unnest_tokens(bigram, body, token = "ngrams", n = 2) %>% 
  filter(!is.na(bigram)) %>% 
  separate(bigram, c("word1", "word2"), sep = " ") %>% 
  filter(!word1 %in% stop_words$word & (nchar(word1) < 20)) %>% 
  filter(!word2 %in% stop_words$word & (nchar(word2) < 20)) %>% 
  filter(str_detect(word1, "[a-z]") & !str_detect(word1, "<")) %>% 
  filter(str_detect(word2, "[a-z]") & !str_detect(word2, "<")) %>% 
  unite(bigram, word1, word2, sep = " ") %>% 
  count(month, bigram) %>% 
  bind_tf_idf(bigram, month, n) %>% 
  bind_log_odds(bigram, month, n) %>% 
  arrange(desc(tf_idf)) %>% 
  filter(bigram %out% c("million people", "humanitarian assistance")) %>% 
  rename(word = bigram) %>% 
  filter(n > 1) %>% 
  ungroup() %>%
  filter(!is.infinite(log_odds_weighted)) %>%
  mutate(month = factor(month.abb[month],levels = month.abb)) %>%
  group_by(month) %>% 
  arrange(desc(log_odds_weighted), desc(tf_idf)) %>% 
  mutate(rank = row_number()) %>% 
  filter(rank <= 16) %>% 
  ungroup() %>% 
  ggplot(aes(x = log_odds_weighted, 
             y = fct_reorder(word, log_odds_weighted), 
             fill = month)) + 
  geom_col(show.legend = FALSE) +
  scale_fill_viridis_d() + 
  facet_wrap(~ month, scales = "free") + 
  labs(x = "Log-odds", 
       y = "", 
       title = "Reliefweb Ukraine articles: log-odds of word specificity by month", 
       subtitle = "A year of humanitarian rhetoric") +
   theme(legend.position = "none",
        axis.text.x = element_text(size = 5, hjust = 1, vjust = 1), 
        axis.text.y = element_text(size = 8), 
        strip.text = element_text(size = 9, face = "bold"),
        strip.background = element_rect(fill = "#212121")) 

 ggsave(plot = bigram_months,
         filename = paste0("./plots/bigram_months_bar.png"),
         device = "png",
         dpi = 300, height = 11, width = 14, units = "in")
 
```



```{r}

bigram_months <- ukr %>% 
  # filter(source %out% c("IAEA", "ACLED", "OSCE")) %>% 
  select(id, month, body) %>% 
  unnest_tokens(bigram, body, token = "ngrams", n = 2) %>% 
  filter(!is.na(bigram)) %>% 
  separate(bigram, c("word1", "word2"), sep = " ") %>% 
  filter(!word1 %in% stop_words$word & (nchar(word1) < 20)) %>% 
  filter(!word2 %in% stop_words$word & (nchar(word2) < 20)) %>% 
  filter(str_detect(word1, "[a-z]") & !str_detect(word1, "<")) %>% 
  filter(str_detect(word2, "[a-z]") & !str_detect(word2, "<")) %>% 
  unite(bigram, word1, word2, sep = " ") %>% 
  count(month, bigram) %>% 
  bind_tf_idf(bigram, month, n) %>% 
  bind_log_odds(bigram, month, n) %>% 
  arrange(desc(tf_idf)) %>% 
  filter(bigram %out% c("million people", "humanitarian assistance", 
                        "european time", "p.m eet", 
                        "recently reported", "eastern european", 
                        "pm kyiv")) %>% 
  rename(word = bigram) %>% 
  filter(n > 1) %>% 
  ungroup() %>% 
  filter(!is.infinite(log_odds_weighted)) %>%
  mutate(month = factor(month.abb[month],levels = month.abb)) %>%
  group_by(month) %>% 
  arrange(desc(log_odds_weighted), desc(tf_idf)) %>% 
  mutate(rank = row_number()) %>% 
  filter(rank <= 16) %>% 
  ungroup() %>% 
  ggplot(aes(x = log_odds_weighted, 
             y = fct_reorder(word, log_odds_weighted), 
             fill = month)) + 
  geom_col(show.legend = FALSE) +
  scale_fill_viridis_d() + 
  facet_wrap(~ month, scales = "free") + 
  labs(x = "Log-odds", 
       y = "", 
       title = "Reliefweb Ukraine articles: log-odds of word specificity by month", 
       subtitle = "A year of humanitarian rhetoric") +
   theme(legend.position = "none",
        axis.text.x = element_text(size = 5, hjust = 1, vjust = 1), 
        axis.text.y = element_text(size = 8), 
        strip.text = element_text(size = 9, face = "bold"),
        strip.background = element_rect(fill = "#212121"))

 ggsave(plot = bigram_months,
         filename = paste0("./plots/bigram_months_bar.png"),
         device = "png",
         dpi = 300, height = 11, width = 14, units = "in")



```


