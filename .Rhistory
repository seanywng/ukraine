frequency_by_source <- function(tbl, source) {
source <- enquo(source)
sourcen <- quo_name(source)
tbl %>%
filter(source == !!source) %>%
group_by(source) %>%
slice_max(tf, n = 20) %>%
ungroup() %>%
mutate(word = fct_reorder(word, tf, .fun = sum)) %>%
ggplot(aes(x = tf,
y = word))+
geom_col(show.legend = FALSE,
fill = "cornflowerblue") +
labs(x = "Term frequency", y = "",
title = paste0("Term frequency -- ", sourcen),
subtitle = "2022-01-01 to 2023-01-01") +
tbl %>%
filter(source == !!source) %>%
group_by(source) %>%
slice_max(tf_idf, n = 20) %>%
ggplot(aes(x = tf_idf,
y = fct_reorder(word, tf_idf, .fun = sum)))+
geom_col(show.legend = FALSE,
fill = "tomato") +
labs(x = "Tf-idf", y = "",
title = paste0("Tf-idf -- ", sourcen),
subtitle = "2022-01-01 to 2023-01-01")
}
tf_idf_bigrams
tf_idf_bigrams %>%
rename(word = bigram) %>%
frequency_by_source("Save the Children")
tf_idf_bigrams %>%
rename(word = bigram) %>%
frequency_by_source("USAID")
bigrams <- bigrams_sep %>%
unite(bigram, word1, word2, sep = " ") %>%
filter(bigrams %out% c("million people"))
bigrams <- bigrams_sep %>%
unite(bigram, word1, word2, sep = " ") %>%
filter(bigram %out% c("million people"))
tf_idf_bigrams <- bigrams %>%
count(id, bigram) %>%
bind_tf_idf(bigram, id, n) %>%
arrange(desc(tf_idf)) %>%
left_join(rw %>%
select(id, source),
by = "id")
tf_idf_bigrams %>%
rename(word = bigram) %>%
frequency_by_source("USAID")
bigrams <- bigrams_sep %>%
unite(bigram, word1, word2, sep = " ") %>%
filter(bigram %out% c("million people",
"humanitarian assistance"))
tf_idf_bigrams <- bigrams %>%
count(id, bigram) %>%
bind_tf_idf(bigram, id, n) %>%
arrange(desc(tf_idf)) %>%
left_join(rw %>%
select(id, source),
by = "id")
tf_idf_bigrams %>%
rename(word = bigram) %>%
frequency_by_source("USAID")
tf_idf_bigrams %>%
rename(word = bigram) %>%
frequency_by_source("WFP")
rw %>%
filter(id ==
tf_idf_bigrams %>%
filter(source == "WFP" & bigram == "neigbouring countries") %>%
sample_n(1) %>%
pull(id)) %>%
pull(body)
tf_idf_bigrams %>%
filter(source == "WFP" & bigram == "neigbouring countries")
tf_idf_bigrams
rw %>%
filter(id ==
tf_idf_bigrams %>%
filter(source == "WFP" & bigram == "neighbouring countries") %>%
sample_n(1) %>%
pull(id)) %>%
pull(body)
tf_idf_bigrams %>%
rename(word = bigram) %>%
frequency_by_source("IMC")
tf_idf_bigrams %>%
rename(word = bigram) %>%
frequency_by_source("World Vision")
tf_idf_bigrams %>%
rename(word = bigram) %>%
frequency_by_source("OCHA")
tf_idf_bigrams %>%
rename(word = bigram) %>%
frequency_by_source("IOM")
tf_idf_bigrams %>%
rename(word = bigram) %>%
frequency_by_source("ACAPS")
top_40 <- rw %>%
count(source, sort = TRUE) %>%
filter(n >= 25) %>%
pull(source)
top_40
tf_idf_bigrams %>%
rename(word = bigram) %>%
frequency_by_source("Ukrainian Red Cross Society")
tf_idf_bigrams %>%
rename(word = bigram) %>%
frequency_by_source("Direct Relief")
tf_idf_bigrams %>%
rename(word = bigram) %>%
frequency_by_source("PIN")
tf_idf_bigrams %>%
rename(word = bigram) %>%
frequency_by_source("ACTED")
rw %>%
filter(id ==
tf_idf_bigrams %>%
filter(source == "ACTED" & bigram == "potential solutions") %>%
sample_n(1) %>%
pull(id)) %>%
pull(body)
frequency_by_source(DRC")
tf_idf_bigrams %>%
rename(word = bigram) %>%
frequency_by_source("DRC")
tf_idf_bigrams %>%
rename(word = bigram) %>%
frequency_by_source("DRC")
rw %>%
filter(id ==
tf_idf_bigrams %>%
filter(source == "DRC" & bigram == "experimental project") %>%
sample_n(1) %>%
pull(id)) %>%
pull(body)
rw %>%
filter(id ==
tf_idf_bigrams %>%
filter(source == "DRC" & bigram == "unemployment assisstance") %>%
sample_n(1) %>%
pull(id)) %>%
pull(body)
rw %>%
filter(id ==
tf_idf_bigrams %>%
filter(source == "DRC" & bigram == "unemployment assistance") %>%
sample_n(1) %>%
pull(id)) %>%
pull(body)
tf_idf_bigrams %>%
rename(word = bigram) %>%
frequency_by_source("ICRC")
tf_idf_bigrams %>%
rename(word = bigram) %>%
frequency_by_source("NRC")
top_40
tf_idf_bigrams %>%
rename(word = bigram) %>%
frequency_by_source("Oxfam")
frequency_by_source <- function(tbl, source) {
source <- enquo(source)
sourcen <- quo_name(source)
tbl %>%
filter(source == !!source) %>%
arrange(desc(tf)) %>%
head(20) %>%
ggplot(aes(x = tf,
y = fct_reorder(word, tf, .fun = sum)))+
geom_col(show.legend = FALSE,
fill = "cornflowerblue") +
labs(x = "Term frequency", y = "",
title = paste0("Term frequency -- ", sourcen),
subtitle = "2022-01-01 to 2023-01-01") +
tbl %>%
filter(source == !!source) %>%
arrange(desc(tf_idf)) %>%
head(20) %>%
ggplot(aes(x = tf_idf,
y = fct_reorder(word, tf_idf, .fun = sum)))+
geom_col(show.legend = FALSE,
fill = "tomato") +
labs(x = "Tf-idf", y = "",
title = paste0("Tf-idf -- ", sourcen),
subtitle = "2022-01-01 to 2023-01-01")
}
frequency_by_source(tf_idf, "Save the Children")
frequency_by_source(tf_idf, "WFP")
rw %>%
count(source, sort = TRUE)
frequency_by_source(tf_idf, "UNFPA")
rw %>%
filter(id ==
tf_idf %>%
filter(source == "UNFPA" & word == "ejova") %>%
sample_n(1) %>%
pull(id)) %>%
pull(body)
frequency_by_source(tf_idf, "USAID")
frequency_by_source(tf_idf, "ACAPS")
rw %>%
filter(id ==
tf_idf %>%
filter(source == "ACAPS" & word == "slipping") %>%
sample_n(1) %>%
pull(id)) %>%
pull(body)
library(tidylo)
tf_idf_bigrams <- bigrams %>%
count(id, bigram) %>%
bind_tf_idf(bigram, id, n) %>%
arrange(desc(tf_idf)) %>%
left_join(rw %>%
select(id, source),
by = "id") %>%
bind_log_odds(bigram, id, n)
tf_idf_bigrams
bigram_frequency_by_source <- function(tbl, source) {
source <- enquo(source)
sourcen <- quo_name(source)
tbl %>%
filter(source == !!source) %>%
group_by(bigram) %>%
slice_max(log_odds_weighted) %>%
ungroup() %>%
arrange(desc(log_odds_weighted)) %>%
head(20) %>%
ggplot(aes(x = log_odds_weighted,
y = fct_reorder(word, log_odds_weighted, .fun = sum)))+
geom_col(show.legend = FALSE,
fill = "cornflowerblue") +
labs(x = "Term frequency", y = "",
title = paste0("Term frequency -- ", sourcen),
subtitle = "2022-01-01 to 2023-01-01") +
tbl %>%
filter(source == !!source) %>%
group_by(bigram) %>%
slice_max(tf_idf) %>%
ungroup() %>%
arrange(desc(tf_idf)) %>%
head(20) %>%
ggplot(aes(x = tf_idf,
y = fct_reorder(word, tf_idf, .fun = sum)))+
geom_col(show.legend = FALSE,
fill = "tomato") +
labs(x = "Tf-idf", y = "",
title = paste0("Tf-idf -- ", sourcen),
subtitle = "2022-01-01 to 2023-01-01")
}
tf_idf_bigrams %>%
rename(word = bigram) %>%
bigram_frequency_by_source("WFP")
bigram_frequency_by_source <- function(tbl, source) {
source <- enquo(source)
sourcen <- quo_name(source)
tbl %>%
filter(source == !!source) %>%
group_by(word) %>%
slice_max(log_odds_weighted) %>%
ungroup() %>%
arrange(desc(log_odds_weighted)) %>%
head(20) %>%
ggplot(aes(x = log_odds_weighted,
y = fct_reorder(word, log_odds_weighted, .fun = sum)))+
geom_col(show.legend = FALSE,
fill = "cornflowerblue") +
labs(x = "Term frequency", y = "",
title = paste0("Term frequency -- ", sourcen),
subtitle = "2022-01-01 to 2023-01-01") +
tbl %>%
filter(source == !!source) %>%
group_by(word) %>%
slice_max(tf_idf) %>%
ungroup() %>%
arrange(desc(tf_idf)) %>%
head(20) %>%
ggplot(aes(x = tf_idf,
y = fct_reorder(word, tf_idf, .fun = sum)))+
geom_col(show.legend = FALSE,
fill = "tomato") +
labs(x = "Tf-idf", y = "",
title = paste0("Tf-idf -- ", sourcen),
subtitle = "2022-01-01 to 2023-01-01")
}
tf_idf_bigrams %>%
rename(word = bigram) %>%
bigram_frequency_by_source("WFP")
bigram_frequency_by_source <- function(tbl, source) {
source <- enquo(source)
sourcen <- quo_name(source)
tbl %>%
filter(source == !!source) %>%
arrange(desc(log_odds_weighted)) %>%
head(20) %>%
ggplot(aes(x = log_odds_weighted,
y = fct_reorder(word, log_odds_weighted, .fun = sum)))+
geom_col(show.legend = FALSE,
fill = "cornflowerblue") +
labs(x = "Term frequency", y = "",
title = paste0("Term frequency -- ", sourcen),
subtitle = "2022-01-01 to 2023-01-01") +
tbl %>%
filter(source == !!source) %>%
arrange(desc(tf_idf)) %>%
head(20) %>%
ggplot(aes(x = tf_idf,
y = fct_reorder(word, tf_idf, .fun = sum)))+
geom_col(show.legend = FALSE,
fill = "tomato") +
labs(x = "Tf-idf", y = "",
title = paste0("Tf-idf -- ", sourcen),
subtitle = "2022-01-01 to 2023-01-01")
}
tf_idf_bigrams %>%
rename(word = bigram) %>%
bigram_frequency_by_source("WFP")
tf_idf_bigrams %>%
filter(source == "WFP")
bigram_frequency_by_source <- function(tbl, source) {
source <- enquo(source)
sourcen <- quo_name(source)
tbl %>%
filter(source == !!source) %>%
arrange(desc(log_odds_weighted)) %>%
head(20) %>%
ggplot(aes(x = log_odds_weighted,
y = fct_reorder(word, log_odds_weighted, .fun = sum)))+
geom_col(show.legend = FALSE,
fill = "cornflowerblue") +
labs(x = "Term frequency", y = "",
title = paste0("Term frequency -- ", sourcen),
subtitle = "2022-01-01 to 2023-01-01") +
tbl %>%
filter(source == !!source) %>%
filter(!is.infinite(log_odds_weighted)) %>%
arrange(desc(tf_idf)) %>%
head(20) %>%
ggplot(aes(x = tf_idf,
y = fct_reorder(word, tf_idf, .fun = sum)))+
geom_col(show.legend = FALSE,
fill = "tomato") +
labs(x = "Tf-idf", y = "",
title = paste0("Tf-idf -- ", sourcen),
subtitle = "2022-01-01 to 2023-01-01")
}
bigram_frequency_by_source <- function(tbl, source) {
source <- enquo(source)
sourcen <- quo_name(source)
tbl %>%
filter(source == !!source) %>%
filter(!is.infinite(log_odds_weighted)) %>%
arrange(desc(log_odds_weighted)) %>%
head(20) %>%
ggplot(aes(x = log_odds_weighted,
y = fct_reorder(word, log_odds_weighted, .fun = sum)))+
geom_col(show.legend = FALSE,
fill = "cornflowerblue") +
labs(x = "Log odds", y = "",
title = paste0("Log odds -- ", sourcen),
subtitle = "2022-01-01 to 2023-01-01") +
tbl %>%
filter(source == !!source) %>%
arrange(desc(tf_idf)) %>%
head(20) %>%
ggplot(aes(x = tf_idf,
y = fct_reorder(word, tf_idf, .fun = sum)))+
geom_col(show.legend = FALSE,
fill = "tomato") +
labs(x = "Tf-idf", y = "",
title = paste0("Tf-idf -- ", sourcen),
subtitle = "2022-01-01 to 2023-01-01")
}
tf_idf_bigrams %>%
filter(source == "WFP")
tf_idf_bigrams %>%
rename(word = bigram) %>%
bigram_frequency_by_source("WFP")
bigram_frequency_by_source <- function(tbl, source) {
source <- enquo(source)
sourcen <- quo_name(source)
tbl %>%
filter(source == !!source) %>%
filter(!is.infinite(log_odds_weighted)) %>%
arrange(desc(log_odds_weighted)) %>%
head(20) %>%
ggplot(aes(x = log_odds_weighted,
y = fct_reorder(word, log_odds_weighted)))+
geom_col(show.legend = FALSE,
fill = "cornflowerblue") +
labs(x = "Log odds", y = "",
title = paste0("Log odds -- ", sourcen),
subtitle = "2022-01-01 to 2023-01-01") +
tbl %>%
filter(source == !!source) %>%
arrange(desc(tf_idf)) %>%
head(20) %>%
ggplot(aes(x = tf_idf,
y = fct_reorder(word, tf_idf)))+
geom_col(show.legend = FALSE,
fill = "tomato") +
labs(x = "Tf-idf", y = "",
title = paste0("Tf-idf -- ", sourcen),
subtitle = "2022-01-01 to 2023-01-01")
}
tf_idf_bigrams %>%
rename(word = bigram) %>%
bigram_frequency_by_source("WFP")
tf_idf_bigrams %>%
rename(word = bigram) %>%
bigram_frequency_by_source("USAID")
rw %>%
filter(id ==
tf_idf_bigrams %>%
filter(source == "USAID" & bigram == "bakhmut city") %>%
sample_n(1) %>%
pull(id)) %>%
pull(body)
rw %>%
filter(id ==
tf_idf_bigrams %>%
filter(source == "USAID" & bigram == "bakhmut city") %>%
sample_n(1) %>%
pull(id)) %>%
pull(date, body)
rw %>%
filter(id ==
tf_idf_bigrams %>%
filter(source == "USAID" & bigram == "bakhmut city") %>%
sample_n(1) %>%
pull(id)) %>%
pull(body, date)
rw %>%
filter(id ==
tf_idf_bigrams %>%
filter(source == "USAID" & bigram == "bakhmut city") %>%
sample_n(1) %>%
pull(id)) %>%
pull(body, date)
tf_idf_bigrams %>%
filter(source == "USAID" & bigram == "bakhmut city")
rw %>%
filter(id ==
tf_idf_bigrams %>%
filter(source == "USAID" & bigram == "bakhmut city") %>%
sample_n(1) %>%
pull(id)) %>%
pull(body, date)
rw %>%
filter(id ==
tf_idf %>%
filter(word == gou) %>%
sample_n(1) %>%
pull(id)) %>%
pull(body, date)
rw %>%
filter(id ==
tf_idf %>%
filter(word == "gou") %>%
sample_n(1) %>%
pull(id)) %>%
pull(body, date)
rw %>%
filter(id ==
tf_idf %>%
filter(word == "gou") %>%
sample_n(1) %>%
pull(id)) %>%
pull(body, source, date)
rw %>%
filter(id ==
tf_idf %>%
filter(word == "gou") %>%
sample_n(1) %>%
pull(id)) %>%
pull(body, date)
rw %>%
filter(id ==
tf_idf %>%
filter(word == "gou") %>%
sample_n(1) %>%
pull(id)) %>%
pull(body, date)
rw %>%
filter(id ==
tf_idf %>%
filter(word == "gou") %>%
sample_n(1) %>%
pull(id))
rw %>%
filter(id ==
tf_idf %>%
filter(word == "gou") %>%
sample_n(1) %>%
pull(id)) %>%
pull(body, date, source)
rw %>%
filter(id ==
tf_idf %>%
filter(word == "gou") %>%
sample_n(1) %>%
pull(id)) %>%
pull(body, date, `source`)
rw
rw %>%
filter(id ==
tf_idf %>%
filter(word == "gou") %>%
sample_n(1) %>%
pull(id)) %>%
pull(body, source)
