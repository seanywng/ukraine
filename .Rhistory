unnest_tokens(word, title) %>%
count(id, word, sort = TRUE) %>%
anti_join(stop_words, by = "word") %>%
filter(nchar(word) < 20) %>%
filter(word %out% c(tolower(month.name), "reporting", "period")) %>%
pairwise_count(word, id, sort = TRUE, upper = FALSE) %>%
filter(str_detect(item1, "[a-z]") & str_detect(item2, "[a-z]")) %>%
filter(n >= 10) %>%
igraph::graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = n, edge_width = n), edge_colour = "cyan4") +
geom_node_point(size = 2) +
geom_node_text(aes(label = name), repel = TRUE, size = 4,
point.padding = unit(0.2, "lines")) +
labs(title = "Word pairs in Reliefweb Ukraine articles",
subtitle = "2022-01-01 to 2023-01-01")
set.seed(2023)
ukr %>%
filter(source %out% c("ACLED", "OSCE", "IAEA")) %>%
select(id, title) %>%
unnest_tokens(word, title) %>%
count(id, word, sort = TRUE) %>%
anti_join(stop_words, by = "word") %>%
filter(nchar(word) < 20) %>%
filter(word %out% c(tolower(month.name), "reporting", "period")) %>%
pairwise_count(word, id, sort = TRUE, upper = FALSE) %>%
filter(str_detect(item1, "[a-z]") & str_detect(item2, "[a-z]")) %>%
filter(n >= 20) %>%
igraph::graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = n, edge_width = n), edge_colour = "cyan4") +
geom_node_point(size = 2) +
geom_node_text(aes(label = name), repel = TRUE, size = 4,
point.padding = unit(0.2, "lines")) +
labs(title = "Word pairs in Reliefweb Ukraine articles",
subtitle = "2022-01-01 to 2023-01-01")
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE,
fig.retina = 2, fig.show = "hold")
library(tidyverse)
library(tidytext)
library(tidymodels)
library(broom)
library(ggraph)
library(tidylo)
library(widyr)
library(janitor)
library(lubridate)
library(SnowballC)
library(magrittr)
library(patchwork)
library(tidylo)
library(DT)
library(readxl)
library(flextable)
library(viridis)
library(scales)
`%out%` <- Negate(`%in%`)
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
theme_set(theme_light())
options(scipen = 100)
ukr_sector %>%
group_by(source, org_type) %>%
summarise(docs = n_distinct(id),
sectors = n_distinct(sector),
.groups = "drop") %>%
ggplot(aes(x = docs,
y = sectors,
colour = org_type)) +
geom_jitter(alpha = .7,
aes(size = docs,
colour = org_type)) +
geom_text(aes(label = source), repel = TRUE, check_overlap = TRUE, size = 1.5,
# point.padding = unit(0.05, "lines"),
colour = "black") +
scale_size_continuous(range = c(.5, 10)) +
scale_colour_brewer(palette = "Dark2") +
scale_x_log10(breaks = c(1, 3, 10, 30, 100, 300)) +
scale_y_continuous(breaks = seq(0, 20, by = 4)) +
labs(colour = "org type", size = "n docs",
x = "Number of RW documents",
y = "Sectors/themes",
title = "Number of documents and themes on Ukraine per RW source",
subtitle = "Data source: https://reliefweb.int/updates?advanced-search=%28PC241%29_%28DA20220101-20230104%29") +
guides(colour = guide_legend(override.aes = list(alpha = 1,
size = 3)))
ukr %>%
filter(source %out% c("ACLED", "OSCE", "IAEA")) %>%
select(id, title) %>%
unnest_tokens(word, title) %>%
count(id, word, sort = TRUE) %>%
anti_join(stop_words, by = "word") %>%
filter(nchar(word) < 20) %>%
filter(word %out% c(tolower(month.name), "reporting", "period")) %>%
pairwise_count(word, id, sort = TRUE, upper = FALSE) %>%
filter(str_detect(item1, "[a-z]") & str_detect(item2, "[a-z]")) %>%
filter(n >= 20) %>%
igraph::graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = n, edge_width = n), edge_colour = "cyan4") +
geom_node_point(size = 2) +
geom_node_text(aes(label = name), repel = TRUE, size = 4,
point.padding = unit(0.2, "lines")) +
labs(title = "Word pairs in Reliefweb Ukraine articles",
subtitle = "2022-01-01 to 2023-01-01")
set.seed(2024)
ukr %>%
filter(source %out% c("ACLED", "OSCE", "IAEA")) %>%
select(id, title) %>%
unnest_tokens(word, title) %>%
count(id, word, sort = TRUE) %>%
anti_join(stop_words, by = "word") %>%
filter(nchar(word) < 20) %>%
filter(word %out% c(tolower(month.name), "reporting", "period")) %>%
pairwise_count(word, id, sort = TRUE, upper = FALSE) %>%
filter(str_detect(item1, "[a-z]") & str_detect(item2, "[a-z]")) %>%
filter(n >= 20) %>%
igraph::graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = n, edge_width = n), edge_colour = "cyan4") +
geom_node_point(size = 2) +
geom_node_text(aes(label = name), repel = TRUE, size = 4,
point.padding = unit(0.2, "lines")) +
labs(title = "Word pairs in Reliefweb Ukraine articles",
subtitle = "2022-01-01 to 2023-01-01")
set.seed(2022)
ukr %>%
filter(source %out% c("ACLED", "OSCE", "IAEA")) %>%
select(id, title) %>%
unnest_tokens(word, title) %>%
count(id, word, sort = TRUE) %>%
anti_join(stop_words, by = "word") %>%
filter(nchar(word) < 20) %>%
filter(word %out% c(tolower(month.name), "reporting", "period")) %>%
pairwise_count(word, id, sort = TRUE, upper = FALSE) %>%
filter(str_detect(item1, "[a-z]") & str_detect(item2, "[a-z]")) %>%
filter(n >= 20) %>%
igraph::graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = n, edge_width = n), edge_colour = "cyan4") +
geom_node_point(size = 2) +
geom_node_text(aes(label = name), repel = TRUE, size = 4,
point.padding = unit(0.2, "lines")) +
labs(title = "Word pairs in Reliefweb Ukraine articles",
subtitle = "2022-01-01 to 2023-01-01")
set.seed(2023)
ukr %>%
filter(source %out% c("ACLED", "OSCE", "IAEA")) %>%
select(id, title) %>%
unnest_tokens(word, title) %>%
count(id, word, sort = TRUE) %>%
anti_join(stop_words, by = "word") %>%
filter(nchar(word) < 20) %>%
filter(word %out% c(tolower(month.name), "reporting", "period")) %>%
pairwise_count(word, id, sort = TRUE, upper = FALSE) %>%
filter(str_detect(item1, "[a-z]") & str_detect(item2, "[a-z]")) %>%
filter(n >= 20) %>%
igraph::graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = n, edge_width = n), edge_colour = "cyan4") +
geom_node_point(size = 2) +
geom_node_text(aes(label = name), repel = TRUE, size = 4,
point.padding = unit(0.2, "lines")) +
labs(title = "Word pairs in Reliefweb Ukraine articles",
subtitle = "2022-01-01 to 2023-01-01")
theme_set(theme_gray(12))
ukr_sector %>%
group_by(source, org_type) %>%
summarise(docs = n_distinct(id),
sectors = n_distinct(sector),
.groups = "drop") %>%
ggplot(aes(x = docs,
y = sectors,
colour = org_type)) +
geom_jitter(alpha = .7,
aes(size = docs,
colour = org_type)) +
geom_text(aes(label = source), repel = TRUE, check_overlap = TRUE, size = 1.5,
# point.padding = unit(0.05, "lines"),
colour = "black") +
scale_size_continuous(range = c(.5, 10)) +
scale_colour_brewer(palette = "Dark2") +
scale_x_log10(breaks = c(1, 3, 10, 30, 100, 300)) +
scale_y_continuous(breaks = seq(0, 20, by = 4)) +
labs(colour = "org type", size = "n docs",
x = "Number of RW documents",
y = "Sectors/themes",
title = "Number of documents and themes on Ukraine per RW source",
subtitle = "Data source: https://reliefweb.int/updates?advanced-search=%28PC241%29_%28DA20220101-20230104%29") +
guides(colour = guide_legend(override.aes = list(alpha = 1,
size = 3)))
theme_set(theme_gray(5))
ukr_sector %>%
group_by(source, org_type) %>%
summarise(docs = n_distinct(id),
sectors = n_distinct(sector),
.groups = "drop") %>%
ggplot(aes(x = docs,
y = sectors,
colour = org_type)) +
geom_jitter(alpha = .7,
aes(size = docs,
colour = org_type)) +
geom_text(aes(label = source), repel = TRUE, check_overlap = TRUE, size = 1.5,
# point.padding = unit(0.05, "lines"),
colour = "black") +
scale_size_continuous(range = c(.5, 10)) +
scale_colour_brewer(palette = "Dark2") +
scale_x_log10(breaks = c(1, 3, 10, 30, 100, 300)) +
scale_y_continuous(breaks = seq(0, 20, by = 4)) +
labs(colour = "org type", size = "n docs",
x = "Number of RW documents",
y = "Sectors/themes",
title = "Number of documents and themes on Ukraine per RW source",
subtitle = "Data source: https://reliefweb.int/updates?advanced-search=%28PC241%29_%28DA20220101-20230104%29") +
guides(colour = guide_legend(override.aes = list(alpha = 1,
size = 3)))
theme_set(theme_light())
theme_set(theme_linedraw())
ukr_sector %>%
group_by(source, org_type) %>%
summarise(docs = n_distinct(id),
sectors = n_distinct(sector),
.groups = "drop") %>%
ggplot(aes(x = docs,
y = sectors,
colour = org_type)) +
geom_jitter(alpha = .7,
aes(size = docs,
colour = org_type)) +
geom_text(aes(label = source), repel = TRUE, check_overlap = TRUE, size = 1.5,
# point.padding = unit(0.05, "lines"),
colour = "black") +
scale_size_continuous(range = c(.5, 10)) +
scale_colour_brewer(palette = "Dark2") +
scale_x_log10(breaks = c(1, 3, 10, 30, 100, 300)) +
scale_y_continuous(breaks = seq(0, 20, by = 4)) +
labs(colour = "org type", size = "n docs",
x = "Number of RW documents",
y = "Sectors/themes",
title = "Number of documents and themes on Ukraine per RW source",
subtitle = "Data source: https://reliefweb.int/updates?advanced-search=%28PC241%29_%28DA20220101-20230104%29") +
guides(colour = guide_legend(override.aes = list(alpha = 1,
size = 3)))
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE,
fig.retina = 1.5, fig.show = "hold")
library(tidyverse)
library(tidytext)
library(tidymodels)
library(broom)
library(ggraph)
library(tidylo)
library(widyr)
library(janitor)
library(lubridate)
library(SnowballC)
library(magrittr)
library(patchwork)
library(tidylo)
library(DT)
library(readxl)
library(flextable)
library(viridis)
library(scales)
`%out%` <- Negate(`%in%`)
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
theme_set(theme_light())
options(scipen = 100)
ukr_sector %>%
group_by(source, org_type) %>%
summarise(docs = n_distinct(id),
sectors = n_distinct(sector),
.groups = "drop") %>%
ggplot(aes(x = docs,
y = sectors,
colour = org_type)) +
geom_jitter(alpha = .7,
aes(size = docs,
colour = org_type)) +
geom_text(aes(label = source), repel = TRUE, check_overlap = TRUE, size = 1.5,
# point.padding = unit(0.05, "lines"),
colour = "black") +
scale_size_continuous(range = c(.5, 10)) +
scale_colour_brewer(palette = "Dark2") +
scale_x_log10(breaks = c(1, 3, 10, 30, 100, 300)) +
scale_y_continuous(breaks = seq(0, 20, by = 4)) +
labs(colour = "org type", size = "n docs",
x = "Number of RW documents",
y = "Sectors/themes",
title = "Number of documents and themes on Ukraine per RW source",
subtitle = "Data source: https://reliefweb.int/updates?advanced-search=%28PC241%29_%28DA20220101-20230104%29") +
guides(colour = guide_legend(override.aes = list(alpha = 1,
size = 3)))
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE,
fig.retina = 2, fig.show = "hold")
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE,
fig.show = "hold")
ukr_sector %>%
group_by(source, org_type) %>%
summarise(docs = n_distinct(id),
sectors = n_distinct(sector),
.groups = "drop") %>%
ggplot(aes(x = docs,
y = sectors,
colour = org_type)) +
geom_jitter(alpha = .7,
aes(size = docs,
colour = org_type)) +
geom_text(aes(label = source), repel = TRUE, check_overlap = TRUE, size = 1.5,
# point.padding = unit(0.05, "lines"),
colour = "black") +
scale_size_continuous(range = c(.5, 10)) +
scale_colour_brewer(palette = "Dark2") +
scale_x_log10(breaks = c(1, 3, 10, 30, 100, 300)) +
scale_y_continuous(breaks = seq(0, 20, by = 4)) +
labs(colour = "org type", size = "n docs",
x = "Number of RW documents",
y = "Sectors/themes",
title = "Number of documents and themes on Ukraine per RW source",
subtitle = "Data source: https://reliefweb.int/updates?advanced-search=%28PC241%29_%28DA20220101-20230104%29") +
guides(colour = guide_legend(override.aes = list(alpha = 1,
size = 3)))
ukr_sector %>%
group_by(source, org_type) %>%
summarise(docs = n_distinct(id),
sectors = n_distinct(sector),
.groups = "drop") %>%
ggplot(aes(x = docs,
y = sectors,
colour = org_type)) +
geom_jitter(alpha = .7,
aes(size = docs,
colour = org_type)) +
geom_text(aes(label = source), repel = TRUE, check_overlap = TRUE, size = 1.5,
# point.padding = unit(0.05, "lines"),
colour = "black") +
scale_size_continuous(range = c(1, 20)) +
scale_colour_brewer(palette = "Dark2") +
scale_x_log10(breaks = c(1, 3, 10, 30, 100, 300)) +
scale_y_continuous(breaks = seq(0, 20, by = 4)) +
labs(colour = "org type", size = "n docs",
x = "Number of RW documents",
y = "Sectors/themes",
title = "Number of documents and themes on Ukraine per RW source",
subtitle = "Data source: https://reliefweb.int/updates?advanced-search=%28PC241%29_%28DA20220101-20230104%29") +
guides(colour = guide_legend(override.aes = list(alpha = 1,
size = 3)))
ukr_sector %>%
group_by(source, org_type) %>%
summarise(docs = n_distinct(id),
sectors = n_distinct(sector),
.groups = "drop") %>%
ggplot(aes(x = docs,
y = sectors,
colour = org_type)) +
geom_jitter(alpha = .7,
aes(size = docs,
colour = org_type)) +
geom_text(aes(label = source), repel = TRUE, check_overlap = TRUE, size = 2,
# point.padding = unit(0.05, "lines"),
colour = "black") +
scale_size_continuous(range = c(1, 20)) +
scale_colour_brewer(palette = "Dark2") +
scale_x_log10(breaks = c(1, 3, 10, 30, 100, 300)) +
scale_y_continuous(breaks = seq(0, 20, by = 4)) +
labs(colour = "org type", size = "n docs",
x = "Number of RW documents",
y = "Sectors/themes",
title = "Number of documents and themes on Ukraine per RW source",
subtitle = "Data source: https://reliefweb.int/updates?advanced-search=%28PC241%29_%28DA20220101-20230104%29") +
guides(colour = guide_legend(override.aes = list(alpha = 1,
size = 3)))
ggsave(filename = paste0("./plots/sources_scatter.png"),
device = "png",
dpi = 400, height = 10, width = 14, units = "in")
ukr_sector %>%
group_by(source, org_type) %>%
summarise(docs = n_distinct(id),
sectors = n_distinct(sector),
.groups = "drop") %>%
ggplot(aes(x = docs,
y = sectors,
colour = org_type)) +
geom_jitter(alpha = .7,
aes(size = docs,
colour = org_type)) +
geom_text(aes(label = source), repel = TRUE, check_overlap = TRUE, size = 2,
# point.padding = unit(0.05, "lines"),
colour = "black") +
scale_size_continuous(range = c(1, 20)) +
scale_colour_brewer(palette = "Dark2") +
scale_x_log10(breaks = c(1, 3, 10, 30, 100, 300)) +
scale_y_continuous(breaks = seq(0, 20, by = 4)) +
labs(colour = "org type", size = "*n* docs",
x = "Number of RW documents",
y = "Sectors/themes",
title = "Number of documents and themes on Ukraine per RW source",
subtitle = "Data source: https://reliefweb.int/updates?advanced-search=%28PC241%29_%28DA20220101-20230104%29") +
guides(colour = guide_legend(override.aes = list(alpha = 1,
size = 3)))
ukr_sector %>%
group_by(source, org_type) %>%
summarise(docs = n_distinct(id),
sectors = n_distinct(sector),
.groups = "drop") %>%
ggplot(aes(x = docs,
y = sectors,
colour = org_type)) +
geom_jitter(alpha = .7,
aes(size = docs,
colour = org_type)) +
geom_text(aes(label = source), repel = TRUE, check_overlap = TRUE, size = 2,
# point.padding = unit(0.05, "lines"),
colour = "black") +
scale_size_continuous(range = c(1, 20)) +
scale_colour_brewer(palette = "Dark2") +
scale_x_log10(breaks = c(1, 3, 10, 30, 100, 300)) +
scale_y_continuous(breaks = seq(0, 20, by = 4)) +
labs(colour = "org type", size = "\\*n\\* docs",
x = "Number of RW documents",
y = "Sectors/themes",
title = "Number of documents and themes on Ukraine per RW source",
subtitle = "Data source: https://reliefweb.int/updates?advanced-search=%28PC241%29_%28DA20220101-20230104%29") +
guides(colour = guide_legend(override.aes = list(alpha = 1,
size = 3)))
ukr_sector %>%
group_by(source, org_type) %>%
summarise(docs = n_distinct(id),
sectors = n_distinct(sector),
.groups = "drop") %>%
ggplot(aes(x = docs,
y = sectors,
colour = org_type)) +
geom_jitter(alpha = .7,
aes(size = docs,
colour = org_type)) +
geom_text(aes(label = source), repel = TRUE, check_overlap = TRUE, size = 2,
# point.padding = unit(0.05, "lines"),
colour = "black") +
scale_size_continuous(range = c(1, 20)) +
scale_colour_brewer(palette = "Dark2") +
scale_x_log10(breaks = c(1, 3, 10, 30, 100, 300)) +
scale_y_continuous(breaks = seq(0, 20, by = 4)) +
labs(colour = "org type", size = "n docs",
x = "Number of RW documents",
y = "Sectors/themes",
title = "Number of documents and themes on Ukraine per RW source",
subtitle = "Data source: https://reliefweb.int/updates?advanced-search=%28PC241%29_%28DA20220101-20230104%29") +
guides(colour = guide_legend(override.aes = list(alpha = 1,
size = 3)))
ukr_sector %>%
group_by(source, org_type) %>%
summarise(docs = n_distinct(id),
sectors = n_distinct(sector),
.groups = "drop") %>%
ggplot(aes(x = docs,
y = sectors,
colour = org_type)) +
geom_jitter(alpha = .7,
aes(size = docs,
colour = org_type)) +
geom_text(aes(label = source), repel = TRUE, check_overlap = TRUE, size = 2,
# point.padding = unit(0.05, "lines"),
colour = "black") +
scale_size_continuous(range = c(1, 20)) +
scale_colour_brewer(palette = "Dark2") +
scale_x_log10(breaks = c(1, 3, 10, 30, 100, 300)) +
scale_y_continuous(breaks = seq(0, 20, by = 4)) +
labs(colour = "org type", size = "n docs",
x = "Number of RW documents",
y = "Sectors/themes",
title = "Number of documents and themes on Ukraine per RW source",
subtitle = "Data source: https://reliefweb.int/updates?advanced-search=%28PC241%29_%28DA20220101-20230104%29\nExcludes news and press releases") +
guides(colour = guide_legend(override.aes = list(alpha = 1,
size = 3)))
ukr_sector %>%
group_by(source, org_type) %>%
summarise(docs = n_distinct(id),
sectors = n_distinct(sector),
.groups = "drop") %>%
ggplot(aes(x = docs,
y = sectors,
colour = org_type)) +
geom_jitter(alpha = .7,
aes(size = docs,
colour = org_type)) +
geom_text(aes(label = source), repel = TRUE, check_overlap = TRUE, size = 2,
# point.padding = unit(0.05, "lines"),
colour = "black") +
scale_size_continuous(range = c(1, 20)) +
scale_colour_brewer(palette = "Dark2") +
scale_x_log10(breaks = c(1, 3, 10, 30, 100, 300)) +
scale_y_continuous(breaks = seq(0, 20, by = 4)) +
labs(colour = "org type", size = "n docs",
x = "Number of RW documents",
y = "Sectors/themes",
title = "Number of documents and themes on Ukraine per RW source",
subtitle = "Excludes news and press releases\nData source: https://reliefweb.int/updates?advanced-search=%28PC241%29_%28DA20220101-20230104%29") +
guides(colour = guide_legend(override.aes = list(alpha = 1,
size = 3)))
ggsave(filename = paste0("./plots/sources_scatter.png"),
device = "png",
dpi = 400, height = 10, width = 14, units = "in")
words <- ukr %>%
select(id, source, body) %>%
filter(source %out% c("ACLED", "OSCE", "IAEA")) %>%
unnest_tokens(word, body) %>%
count(id, word, sort = TRUE) %>%
anti_join(stop_words, by = "word") %>%
filter(nchar(word) < 20) %>%
filter(word %out% c(tolower(month.name), "reporting", "period")) %>%
filter(!str_detect(word, "\\.(com|org|edu|gov)")) %>%
filter(str_detect(word, "[a-z]"))
